plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'io.gitlab.arturbosch.detekt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "example.com.moviedb"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "API_KEY", "\"22574df9e1fe27a06f9bce371fb6aa2a\""
        buildConfigField "String", "LANGUAGE", "\"en-US\""
        buildConfigField "String", "IMAGE_BASE_URL", "\"https://image.tmdb.org/t/p/w500\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests{
            includeAndroidResources = true
        }
    }
    packagingOptions {
        merge "META-INF/LICENSE"
        merge "META-INF/AL2.0"
        merge "META-INF/LGPL2.1"
    }
    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
    configurations.all {
        resolutionStrategy {
            force 'androidx.test:monitor:1.4.0'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_livedata_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_livedata_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'

    //dagger
    implementation 'com.google.dagger:dagger-android:2.35.1'
    implementation "com.google.dagger:dagger-android-support:$dagger_support_version"
    annotationProcessor 'androidx.room:room-compiler:2.3.0'
    kapt "com.google.dagger:dagger-android-processor:$dagger_support_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_compiler_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'androidx.paging:paging-runtime:3.0.0-beta01'

    //lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //rxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    //fragment-navigation
    implementation "androidx.fragment:fragment-ktx:1.4.0-alpha02"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "com.google.truth:truth:1.0.1"
    androidTestImplementation "com.google.truth:truth:1.0.1"
    testImplementation "com.google.truth.extensions:truth-java8-extension:1.0.1"
    androidTestImplementation('androidx.test.ext:truth:1.3.0')
    //mockito
    //testImplementation("androidx.test:core:$mockito_core_version")
    testImplementation("org.mockito:mockito-core:$mockito_core_version")
    testImplementation("org.mockito:mockito-inline:2.8.47")

    //timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    //google material
    implementation "com.google.android.material:material:$material_version"

    //coroutine test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_test_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_test_version"
    testImplementation "androidx.arch.core:core-testing:$arch_test_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_test_version"
    implementation "androidx.room:room-ktx:2.2.5"

    //test core
    androidTestImplementation("androidx.test:core:$android_test_version")

    //junit
    androidTestImplementation("androidx.test.ext:junit:1.1.3")
   // androidTestImplementation("androidx.test.ext:truth:1.0.1")

    //junit runner
    androidTestImplementation("androidx.test:runner:$android_test_version")
    androidTestImplementation("androidx.test:rules:$android_test_version")

    //espresso
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_version")
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$espresso_version")
    androidTestImplementation("androidx.test.espresso:espresso-intents:$espresso_version")
    androidTestImplementation("androidx.test.espresso:espresso-accessibility:$espresso_version")
    androidTestImplementation("androidx.test.espresso:espresso-web:$espresso_version")
    androidTestImplementation("androidx.test.espresso.idling:idling-concurrent:$espresso_version")
    androidTestImplementation("androidx.test.espresso:espresso-idling-resource:$espresso_version")

    //fragment testing
    debugImplementation("androidx.fragment:fragment-testing:$fragment_version")
    def robolectricVersion = '4.3.1'
    testImplementation "org.robolectric:robolectric:$robolectricVersion"

}